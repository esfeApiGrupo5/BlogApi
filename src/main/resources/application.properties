spring.application.name=blog-service

spring.cloud.config.enabled=false
spring.cloud.compatibility-verifier.enabled=false
# Eureka Configuration
server.port=8081
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.hostname=upgraded-doodle-g46qjpp49jqgfpv56-8081.app.github.dev
eureka.instance.prefer-ip-address=false
# eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.service-url.defaultZone=https://stunning-adventure-g46qjpp49jjwc9jvv-8761.app.github.dev/eureka/
# ACCESO A LA BASE DE DATOS
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://mysql-275870e1-esfe-d14b.b.aivencloud.com:12019/Blogbd?useSSL=true
spring.datasource.username = avnadmin
spring.datasource.password = AVNS_brT33Rs5r7z6YvPMXch

spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true
spring.jpa.database-platform = org.hibernate.dialect.MySQL8Dialect

# MISMA CLAVE SECRETA QUE EN USUARIO API (�IMPORTANTE!)
security.jwt.secret-key = Y/I5T3T1aSOP+BezsicbSiUtzIZWxdcOVnylSYlJl/H22uPQID8VGjfzc5U5cVhKA6qm17V2yMP/mlrlTIkb+g==

# URL del servicio de usuarios
usuario.api.url=http://localhost:8080

# CONFIGURACIÓN ADICIONAL PARA EUREKA CLIENT
# Aumenta el intervalo entre renovaciones
eureka.instance.lease-renewal-interval-in-seconds=5

# Aumenta el tiempo que Eureka espera antes de darlo por caído (default 90s)
eureka.instance.lease-expiration-duration-in-seconds=180